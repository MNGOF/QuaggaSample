<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quagga.js Example</title>
    <style>
        #interactive {
            position: relative;
            width: 100%;
            height: 100vh;
            overflow: hidden;
        }

        #interactive video {
            width: 100%;
            height: auto;
        }

        #output {
            position: absolute;
            top: 10px;
            left: 10px;
            background: rgba(0, 0, 0, 0.5);
            color: #fff;
            padding: 5px 10px;
            border-radius: 4px;
        }
    </style>
    <script src="https://unpkg.com/@ericblade/quagga2@1.7.4/dist/quagga.min.js"></script>

</head>
<body>
    <div id="interactive">
        <div id="output">Scanning...</div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const outputElement = document.getElementById("output");

            Quagga.init({
                inputStream: {
                    name: "Live",
                    type: "LiveStream",
                    target: document.querySelector("#interactive") // Attach video to this element
                },
                decoder: {
                    readers: ["code_128_reader", "ean_reader", "ean_8_reader", "upc_reader"]
                }
            }, function(err) {
                if (err) {
                    console.error(err);
                    outputElement.textContent = "Error initializing Quagga: " + err.message;
                    return;
                }
                Quagga.start();
            });

            Quagga.onProcessed(function(result){
                var ctx = Quagga.canvas.ctx.overlay;
                var canvas = Quagga.canvas.dom.overlay;

                ctx.clearRect(0, 0, parseInt(canvas.width), parseInt(canvas.height));

                if (result) {
                    if (result.box) {
                        console.log(JSON.stringify(result.box));
                        Quagga.ImageDebug.drawPath(result.box, {x: 0, y: 1}, ctx, {color: 'blue', lineWidth: 2});
                    }
                }
            });

            Quagga.onDetected(data => {
                const code = data.codeResult.code;
                outputElement.textContent = `Detected: ${code}`;
                console.log("Barcode detected:", code);
            });
        });
    </script>
</body>
</html>